{"version":3,"file":"js/atk-vue-tree-item-selector.js","mappings":"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","sources":["webpack://atk/./src/vue-components/tree-item-selector/tree-item-selector.component.js"],"sourcesContent":["import $ from 'external/jquery';\n\nconst template = `<div class=\"item\" :style=\"itemMargin\">\n        <i :class=\"toggleIcon\" @click=\"onToggleShow\" v-show=\"!isRoot\"></i>\n        <i :class=\"getIcon\" @click=\"onToggleSelect\" v-show=\"!isRoot\"></i>\n        <div class=\"content\" >\n          <div @click=\"onToggleSelect\" :style=\"itemCursor\">{{title}}</div>\n          <div class=\"list\" v-show=\"open || isRoot\" v-if=\"isParent\" >\n            <atk-tree-item-selector v-for=\"(item, index) in item.nodes\" :key=\"item.id\" :item=\"item\" :values=\"values\">\n            </atk-tree-item-selector>\n          </div>\n        </div>\n     </div>`;\n\nexport default {\n    template: template,\n    props: { item: Object, values: Array },\n    inject: ['getRootData'],\n    name: 'atk-tree-item-selector',\n    data: function () {\n        return {\n            open: false,\n            isRoot: this.item.id === 'atk-root',\n            isInitialized: false,\n            id: this.item.id,\n            nodes: this.item.nodes,\n            icons: {\n                single: {\n                    on: 'circle',\n                    off: 'circle outline',\n                    indeterminate: 'dot circle outline',\n                },\n                multiple: {\n                    on: 'check square outline',\n                    off: 'square outline',\n                    indeterminate: 'minus square outline',\n                },\n            },\n        };\n    },\n    created: function () {\n        this.getInitData();\n    },\n    mounted: function () {\n    },\n    computed: {\n        itemMargin: function () {\n            return { marginLeft: (this.item.nodes && this.item.nodes.length > 0) ? this.open ? '-13px' : '-10px' : null };\n        },\n        itemCursor: function () {\n            return { cursor: this.isParent ? this.getRootData().options.mode === 'single' ? 'default' : 'pointer' : 'pointer' };\n        },\n        title: function () {\n            return this.item.name;\n        },\n        isParent: function () {\n            return (this.nodes && this.nodes.length > 0);\n        },\n        toggleIcon: function () {\n            return this.isParent ? (this.open ? 'caret down' : 'caret right') + ' icon' : null;\n        },\n        state: function () {\n            let state = 'off';\n            if (this.isParent) {\n                state = this.hasAllFill(this.nodes) ? 'on' : this.hasSomeFill(this.nodes) ? 'indeterminate' : 'off';\n            } else if (this.isSelected(this.id)) {\n                state = 'on';\n            }\n\n            return state;\n        },\n        getIcon: function () {\n            return this.icons[this.getRootData().options.mode][this.state] + ' icon';\n        },\n    },\n    methods: {\n        isSelected: function (id) {\n            return this.values.filter((val) => val === id).length > 0;\n        },\n        /**\n         * Get input initial data.\n         */\n        getInitData: function () {\n            // check if input containing data is set and initialized.\n            if (!this.getRootData().item.isInitialized) {\n                this.getRootData().values = this.getValues();\n                this.getRootData().item.isInitialized = true;\n            }\n        },\n        getValues: function () {\n            const initValues = JSON.parse(this.getInputElement().value);\n            let values = [];\n            if (Array.isArray(initValues)) {\n                values = initValues;\n            } else {\n                values.push(initValues);\n            }\n\n            return values;\n        },\n        /**\n         * Check if all children nodes are on.\n         *\n         * @returns {boolean}\n         */\n        hasAllFill: function (nodes) {\n            let state = true;\n            for (let i = 0; i < nodes.length; i++) {\n                // check children first;\n                if (nodes[i].nodes && nodes[i].nodes.length > 0) {\n                    if (!this.hasAllFill(nodes[i].nodes)) {\n                        state = false;\n\n                        break;\n                    }\n                } else if (this.values.findIndex((id) => id === nodes[i].id) === -1) {\n                    state = false;\n\n                    break;\n                }\n            }\n\n            return state;\n        },\n        /**\n         * Check if some children nodes are on.\n         *\n         * @returns {boolean}\n         */\n        hasSomeFill: function (nodes) {\n            let state = false;\n            for (let i = 0; i < nodes.length; i++) {\n                // check children first;\n                if (nodes[i].nodes && nodes[i].nodes.length > 0) {\n                    if (this.hasSomeFill(nodes[i].nodes)) {\n                        state = true;\n\n                        break;\n                    }\n                }\n                if (this.values.findIndex((id) => id === nodes[i].id) > -1) {\n                    state = true;\n\n                    break;\n                }\n            }\n\n            return state;\n        },\n        /**\n         * Fire when arrow are click in order to show or hide children.\n         */\n        onToggleShow: function () {\n            if (this.isParent) {\n                this.open = !this.open;\n            }\n        },\n        /**\n         * Fire when checkbox is click.\n         */\n        onToggleSelect: function () {\n            const { options } = this.getRootData();\n            switch (options.mode) {\n                case 'single':\n                    this.handleSingleSelect();\n\n                    break;\n                case 'multiple':\n                    this.handleMultipleSelect();\n\n                    break;\n            }\n        },\n        /**\n         * Merge array and remove duplicate.\n         *\n         * @returns {*[]}\n         */\n        mergeArrays: function (...arrays) {\n            let jointArray = [];\n\n            arrays.forEach((array) => {\n                jointArray = [...jointArray, ...array];\n            });\n\n            return [...new Set([...jointArray])];\n        },\n        /**\n         * Get all id from all chidren node.\n         *\n         * @returns {Array.<string>}\n         */\n        collectAllChildren: function (nodes, ids = []) {\n            nodes.forEach((node) => {\n                if (node.nodes && node.nodes.length > 0) {\n                    ids.concat(this.collectAllChildren(node.nodes, ids));\n                } else {\n                    ids.push(node.id);\n                }\n            });\n\n            return ids;\n        },\n        remove: function (values, value) {\n            return values.filter((val) => val !== value);\n        },\n        /**\n         * Handle a selection when in single mode.\n         */\n        handleSingleSelect: function () {\n            if (this.state === 'off' && !this.isParent) {\n                this.getRootData().values = [this.item.id];\n                this.setInput(this.item.id);\n                if (this.getRootData().options.url) {\n                    this.postValue();\n                }\n            }\n            if (this.isParent) {\n                this.open = !this.open;\n            }\n        },\n        /**\n         * Handle a selection when in multiple mode.\n         */\n        handleMultipleSelect: function () {\n            let values;\n            if (this.isParent) {\n                // collect all children value\n                const childValues = this.collectAllChildren(this.nodes);\n                if (this.state === 'off' || this.state === 'indeterminate') {\n                    values = this.mergeArrays(this.values, childValues);\n                } else {\n                    let temp = this.values;\n                    childValues.forEach((value) => {\n                        temp = this.remove(temp, value);\n                    });\n                    values = temp;\n                }\n            } else if (this.state === 'on') {\n                values = this.remove(this.values, this.item.id);\n            } else if (this.state === 'off') {\n                values = this.values;\n                values.push(this.item.id);\n            }\n\n            this.getRootData().values = [...values];\n            this.setInput(JSON.stringify(values));\n\n            if (this.getRootData().options.url) {\n                this.postValue();\n            }\n        },\n        /**\n         * Set input field with current mapped model value.\n         */\n        setInput: function (value) {\n            // console.log('set input');\n            this.getInputElement().value = value;\n        },\n        /**\n         * Get input element set for this Item Selector.\n         *\n         * @returns {HTMLElement}\n         */\n        getInputElement: function () {\n            return document.getElementsByName(this.getRootData().field)[0];\n        },\n        /**\n         * Send data using callback url.\n         */\n        postValue: function () {\n            $(this.$el).parents('.' + this.getRootData().options.loader).api({\n                on: 'now',\n                url: this.getRootData().options.url,\n                method: 'POST',\n                data: { data: JSON.stringify(this.getRootData().values) },\n            });\n        },\n    },\n};\n"],"names":["$","template","props","item","Object","values","Array","inject","name","data","open","isRoot","id","isInitialized","nodes","icons","single","on","off","indeterminate","multiple","created","getInitData","mounted","computed","itemMargin","marginLeft","length","itemCursor","cursor","isParent","getRootData","options","mode","title","toggleIcon","state","hasAllFill","hasSomeFill","isSelected","getIcon","methods","filter","val","getValues","initValues","JSON","parse","getInputElement","value","isArray","push","i","findIndex","onToggleShow","onToggleSelect","handleSingleSelect","handleMultipleSelect","mergeArrays","jointArray","arrays","forEach","array","Set","collectAllChildren","ids","node","concat","remove","setInput","url","postValue","childValues","temp","stringify","document","getElementsByName","field","$el","parents","loader","api","method"],"sourceRoot":""}