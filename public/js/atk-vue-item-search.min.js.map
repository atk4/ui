{"version":3,"file":"js/atk-vue-item-search.min.js","mappings":"2JAaA,SACIA,KAAM,gBACNC,SAAW,8eAcXC,MAAO,CACHC,QAASC,OACTC,IAAKD,OACLE,EAAGF,OACHG,OAAQH,OACRI,SAAUJ,OACVK,QAASC,QAEbC,KAAM,WACF,MAAO,CACHC,MAAOC,KAAKP,EACZQ,KAAMD,KAAKP,EACXS,UAAU,EACVC,WAAY,KACZC,SAAUJ,KAAKJ,QAAQQ,SAE/B,EACAC,SAAU,CACNC,UAAW,WACP,MAAO,CACH,cAA8B,OAAfN,KAAKD,OAAiC,KAAfC,KAAKD,MAC3C,cAA8B,OAAfC,KAAKD,MAE5B,GAEJQ,QAAS,CACLC,QAAS,WACAR,KAAKQ,QAAQC,cACdT,KAAKQ,QAAQC,YAAcC,EAAAA,EAAIC,mBAAmBC,IAC9CZ,KAAKQ,QAAQC,YAAc,KACvBT,KAAKD,QAAUC,KAAKC,OACD,KAAfD,KAAKD,QACLC,KAAKD,MAAQ,MAEjBC,KAAKa,YACLb,KAAKC,KAAOD,KAAKD,MACrB,GACDC,KAAKJ,QAAQkB,eAEpBd,KAAKQ,QAAQC,YAAYM,KAAKf,KAClC,EACAgB,SAAU,WACa,OAAfhB,KAAKD,QACLC,KAAKD,MAAQ,KACbC,KAAKC,KAAO,KACZD,KAAKa,YAEb,EACAI,QAAS,WACc,OAAfjB,KAAKD,QACLC,KAAKD,MAAQ,KACbC,KAAKC,KAAO,KACZD,KAAKa,YAEb,EACAK,QAAS,WACDlB,KAAKD,QACLC,KAAKD,MAAQ,KACbC,KAAKC,KAAO,KACZD,KAAKa,YAEb,EACAA,UAAW,WACP,MAAMM,EAAOnB,KACPJ,EAAUwB,IAAAA,OAAS,CAAC,EAAGpB,KAAKG,WAAY,CAAEkB,aAAcrB,KAAKN,OAAQ,CAACM,KAAKL,UAAWK,KAAKD,QAC3FuB,EAAUF,IAAE,IAAMpB,KAAKN,QAC7BM,KAAKE,UAAW,EAChBoB,EAAQC,IAAI,CACRC,GAAI,MACJhC,IAAKQ,KAAKR,IACVM,KAAMF,EACN6B,OAAQ,MACRC,aAAc1B,KAAKV,QAAU8B,IAAEpB,KAAKV,SAAW8B,IAAEpB,KAAK2B,KACtDC,WAAY,SAAUhB,EAAGiB,GACrBV,EAAKjB,UAAW,CACpB,GAER,G","sources":["webpack://atk/./src/vue-components/item-search.component.js"],"sourcesContent":["import $ from 'external/jquery';\nimport atk from 'atk';\n\n/**\n * Will allow user to send data query request to server.\n * Request should filter the data and reload the data view.\n *\n * Properties need for this component are:\n * context: string, a jQuery selector where the 'loading' class will be apply by Fomantic-UI - default to this component.\n * url:     string, the URL to call.\n * q:       string, the initial string for the query. Useful if this search is part of the reload.\n * reload:  string, an Id selector for jQuery, '#' is append automatically.\n */\nexport default {\n    name: 'AtkItemSearch',\n    template: `\n        <div class=\"atk-item-search\" :class=\"inputCss\">\n            <input\n                class=\"ui\"\n                v-model=\"query\"\n                type=\"text\"\n                name=\"atk-vue-search\"\n                placeholder=\"Search...\"\n                @keyup=\"onKeyup\"\n                @keyup.esc=\"onEscape\"\n            />\n            <i class=\"atk-search-icon\" :class=\"classIcon\" />\n            <span style=\"width: 12px; cursor: pointer;\" @click=\"onClear\" />\n        </div>`,\n    props: {\n        context: String,\n        url: String,\n        q: String,\n        reload: String,\n        queryArg: String,\n        options: Object,\n    },\n    data: function () {\n        return {\n            query: this.q,\n            temp: this.q,\n            isActive: false,\n            extraQuery: null,\n            inputCss: this.options.inputCss,\n        };\n    },\n    computed: {\n        classIcon: function () {\n            return {\n                'search icon': this.query === null || this.query === '',\n                'remove icon': this.query !== null,\n            };\n        },\n    },\n    methods: {\n        onKeyup: function () {\n            if (!this.onKeyup.debouncedFx) {\n                this.onKeyup.debouncedFx = atk.createDebouncedFx((e) => {\n                    this.onKeyup.debouncedFx = null;\n                    if (this.query !== this.temp) {\n                        if (this.query === '') {\n                            this.query = null;\n                        }\n                        this.sendQuery();\n                        this.temp = this.query;\n                    }\n                }, this.options.inputTimeOut);\n            }\n            this.onKeyup.debouncedFx.call(this);\n        },\n        onEscape: function () {\n            if (this.query !== null) {\n                this.query = null;\n                this.temp = null;\n                this.sendQuery();\n            }\n        },\n        onEnter: function () {\n            if (this.query !== null) {\n                this.query = null;\n                this.temp = null;\n                this.sendQuery();\n            }\n        },\n        onClear: function () {\n            if (this.query) {\n                this.query = null;\n                this.temp = null;\n                this.sendQuery();\n            }\n        },\n        sendQuery: function () {\n            const that = this;\n            const options = $.extend({}, this.extraQuery, { __atk_reload: this.reload, [this.queryArg]: this.query });\n            const $reload = $('#' + this.reload);\n            this.isActive = true;\n            $reload.api({\n                on: 'now',\n                url: this.url,\n                data: options,\n                method: 'GET',\n                stateContext: this.context ? $(this.context) : $(this.$el),\n                onComplete: function (e, r) {\n                    that.isActive = false;\n                },\n            });\n        },\n    },\n};\n"],"names":["name","template","props","context","String","url","q","reload","queryArg","options","Object","data","query","this","temp","isActive","extraQuery","inputCss","computed","classIcon","methods","onKeyup","debouncedFx","atk","createDebouncedFx","e","sendQuery","inputTimeOut","call","onEscape","onEnter","onClear","that","$","__atk_reload","$reload","api","on","method","stateContext","$el","onComplete","r"],"sourceRoot":""}