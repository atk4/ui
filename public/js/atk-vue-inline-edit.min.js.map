{"version":3,"file":"js/atk-vue-inline-edit.min.js","mappings":"gJAaA,MAYA,GACIA,KAAM,kBACNC,SAdc,8WAedC,MAAO,CACHC,IAAKC,OACLC,UAAWD,OACXE,WAAYC,QACZC,QAASC,QAEbC,KAAM,WACF,MAAO,CACHC,MAAOC,KAAKP,UACZQ,KAAMD,KAAKP,UACXS,UAAU,EAElB,EACAC,SAAU,CACNC,QAAS,WACL,OAAOJ,KAAKC,OAASD,KAAKD,KAC9B,GAEJM,QAAS,CACLC,QAAS,WACDN,KAAKE,SACLF,KAAKO,aAELP,KAAKC,KAAOD,KAAKD,KAEzB,EACAS,QAAS,SAAUC,GACf,MAAMC,EAAMD,EAAEE,QACdX,KAAKO,aACO,KAARG,EACAV,KAAKY,QAAQH,GACE,KAARC,GACPV,KAAKa,UAEb,EACAC,OAAQ,WACAd,KAAKI,SAAWJ,KAAKN,WACrBM,KAAKe,SAELf,KAAKD,MAAQC,KAAKC,IAE1B,EACAY,SAAU,WACNb,KAAKD,MAAQC,KAAKC,KAClBD,KAAKgB,IAAIC,cAAc,SAASC,MACpC,EACAN,QAAS,SAAUH,GACXT,KAAKI,SACLJ,KAAKe,QAEb,EACAR,WAAY,WACRP,KAAKE,UAAW,CACpB,EACAiB,WAAY,WAAqB,IAAXC,EAAQ,UAAH,6CAAG,EACZ,IAAVA,GAKJpB,KAAKE,UAAYF,KAAKE,SACtBmB,YAAW,KACPrB,KAAKmB,WAAWC,EAAQ,EAAE,GAC3B,MAPCpB,KAAKE,UAAW,CAQxB,EACAa,OAAQ,WACJ,MAAMO,EAAOtB,KACbuB,IAAEvB,KAAKgB,KAAKQ,IAAI,CACZC,GAAI,MACJlC,IAAKS,KAAKT,IACVO,KAAM,CAAEC,MAAOC,KAAKD,OACpB2B,OAAQ,OACRC,WAAY,SAAUC,EAAGnB,GACjBmB,EAAEC,mBACFP,EAAKpB,UAAW,EAEhBoB,EAAKrB,KAAOqB,EAAKvB,KAEzB,GAER,G","sources":["webpack://atk/./src/vue-components/inline-edit.component.js"],"sourcesContent":["import $ from 'external/jquery';\r\n\r\n/**\r\n * Allow user to edit a db record inline and send\r\n * changes to server.\r\n *\r\n * Properties need for this component are:\r\n *\r\n * context: string, a jQuery selector where the 'loading' class will be apply by Fomantic-UI - default to the requesting element.\r\n * url:     string, the URL to call.\r\n * value:   array, array of value to send to server.\r\n */\r\n\r\nconst template = `\r\n      <div :class=\"[options.inputCss, hasError ? 'error' : '' ]\">\r\n            <input\r\n            :class=\"options.inlineCss\"\r\n            :name=\"options.fieldName\"\r\n            :type=\"options.fieldType\"\r\n            v-model=\"value\"\r\n            @keyup=\"onKeyup\"\r\n            @focus=\"onFocus\"\r\n            @blur=\"onBlur\" /><i class=\"icon\"></i>\r\n      </div>`;\r\n\r\nexport default {\r\n    name: 'atk-inline-edit',\r\n    template: template,\r\n    props: {\r\n        url: String,\r\n        initValue: String,\r\n        saveOnBlur: Boolean,\r\n        options: Object,\r\n    },\r\n    data: function () {\r\n        return {\r\n            value: this.initValue,\r\n            temp: this.initValue,\r\n            hasError: false,\r\n        };\r\n    },\r\n    computed: {\r\n        isDirty: function () {\r\n            return this.temp !== this.value;\r\n        },\r\n    },\r\n    methods: {\r\n        onFocus: function () {\r\n            if (this.hasError) {\r\n                this.clearError();\r\n            } else {\r\n                this.temp = this.value;\r\n            }\r\n        },\r\n        onKeyup: function (e) {\r\n            const key = e.keyCode;\r\n            this.clearError();\r\n            if (key === 13) {\r\n                this.onEnter(e);\r\n            } else if (key === 27) {\r\n                this.onEscape();\r\n            }\r\n        },\r\n        onBlur: function () {\r\n            if (this.isDirty && this.saveOnBlur) {\r\n                this.update();\r\n            } else {\r\n                this.value = this.temp; // TODO will not save the value on 2nd edit and submit via enter\r\n            }\r\n        },\r\n        onEscape: function () {\r\n            this.value = this.temp;\r\n            this.$el.querySelector('input').blur();\r\n        },\r\n        onEnter: function (e) {\r\n            if (this.isDirty) {\r\n                this.update();\r\n            }\r\n        },\r\n        clearError: function () {\r\n            this.hasError = false;\r\n        },\r\n        flashError: function (count = 4) {\r\n            if (count === 0) {\r\n                this.hasError = false;\r\n\r\n                return;\r\n            }\r\n            this.hasError = !this.hasError;\r\n            setTimeout(() => {\r\n                this.flashError(count - 1);\r\n            }, 300);\r\n        },\r\n        update: function () {\r\n            const that = this;\r\n            $(this.$el).api({\r\n                on: 'now',\r\n                url: this.url,\r\n                data: { value: this.value },\r\n                method: 'POST',\r\n                onComplete: function (r, e) {\r\n                    if (r.hasValidationError) {\r\n                        that.hasError = true;\r\n                    } else {\r\n                        that.temp = that.value;\r\n                    }\r\n                },\r\n            });\r\n        },\r\n    },\r\n};\r\n"],"names":["name","template","props","url","String","initValue","saveOnBlur","Boolean","options","Object","data","value","this","temp","hasError","computed","isDirty","methods","onFocus","clearError","onKeyup","e","key","keyCode","onEnter","onEscape","onBlur","update","$el","querySelector","blur","flashError","count","setTimeout","that","$","api","on","method","onComplete","r","hasValidationError"],"sourceRoot":""}