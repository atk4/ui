{"version":3,"file":"atk-vue-item-search.min.js","mappings":"8IAiBA,MAWA,GACIA,KAAM,kBACNC,SAbc,yXAcdC,MAAO,CACHC,QAASC,OACTC,IAAKD,OACLE,EAAGF,OACHG,OAAQH,OACRI,SAAUJ,OACVK,QAAS,CACLC,KAAMC,OACNC,QAAS,KAAM,CAAGC,aAAc,IAAKC,SAAU,OAGvDC,KAAM,WACF,MAAO,CACHC,MAAOC,KAAKX,EACZY,KAAMD,KAAKX,EACXa,UAAU,EACVC,WAAY,KACZN,SAAUG,KAAKR,QAAQK,WAG/BO,SAAU,CACNC,UAAW,WACP,MAAO,CACH,cAA+B,OAAfL,KAAKD,OAAiC,KAAfC,KAAKD,MAC5C,cAA8B,OAAfC,KAAKD,SAIhCO,QAAS,CACLC,QAAS,WACLC,IAAIC,UAAUC,IACNV,KAAKD,QAAUC,KAAKC,OACD,KAAfD,KAAKD,QACLC,KAAKD,MAAQ,MAEjBC,KAAKW,YACLX,KAAKC,KAAOD,KAAKD,SAEtBC,KAAKR,QAAQI,cAAcgB,KAAKZ,OAEvCa,SAAU,WACa,OAAfb,KAAKD,QACLC,KAAKD,MAAQ,KACbC,KAAKC,KAAO,KACZD,KAAKW,cAGbG,QAAS,WACc,OAAfd,KAAKD,QACLC,KAAKD,MAAQ,KACbC,KAAKC,KAAO,KACZD,KAAKW,cAGbI,QAAS,WACDf,KAAKD,QACLC,KAAKD,MAAQ,KACbC,KAAKC,KAAO,KACZD,KAAKW,cAGbA,UAAW,WACP,MAAMK,EAAOhB,KACPR,EAAUyB,IAAAA,OAAS,GAAIjB,KAAKG,WAAY,CAAEe,aAAclB,KAAKV,OAAQ,CAACU,KAAKT,UAAWS,KAAKD,QAC3FoB,EAAUF,GAAAA,CAAE,IAAMjB,KAAKV,QAC7BU,KAAKE,UAAW,EAChBiB,EAAQC,IAAI,CACRC,GAAI,MACJjC,IAAKY,KAAKZ,IACVU,KAAMN,EACN8B,OAAQ,MACRC,aAAevB,KAAKd,QAAW+B,GAAAA,CAAEjB,KAAKd,SAAW+B,GAAAA,CAAEjB,KAAKwB,KACxDC,WAAY,SAAUf,EAAGgB,GACrBV,EAAKd,UAAW","sources":["webpack://atk/./src/components/item-search.component.js"],"sourcesContent":["import $ from 'jquery';\n\n/**\n * Vue component\n * Will allow user to send data query request to server.\n * Request should filter the data and reload the data view.\n * The request is send using Fomantic-UI api.\n *\n * Properties need for this component are:\n *\n * context: string, a jQuery selector where the 'loading' class will be apply by Fomantic-UI:\n *          - default to this component.\n * url:     string, the url to call.\n * q:       string, the initial string for the query. Useful if this search is part of the relaod.\n * reload:  string, an Id selector for jQuery, '#' is append automatically.\n */\n\nconst template = `<div class=\"atk-item-search\" :class=\"inputCss\">\n      <input class=\"ui\"\n        v-model=\"query\"\n        type=\"text\" placeholder=\"Search...\"\n        @keyup=\"onKeyup\"\n        @keyup.esc=\"onEscape\"\n        name=\"atk-vue-search\" />\n        <i class=\"atk-search-icon\" :class=\"classIcon\"></i><span style=\"width: 12px; cursor: pointer\" @click=\"onClear\"></span>\n    </div>\n`;\n\nexport default {\n    name: 'atk-item-search',\n    template: template,\n    props: {\n        context: String,\n        url: String,\n        q: String,\n        reload: String,\n        queryArg: String,\n        options: {\n            type: Object,\n            default: () => ({ inputTimeOut: 350, inputCss: '' }),\n        },\n    },\n    data: function () {\n        return {\n            query: this.q,\n            temp: this.q,\n            isActive: false,\n            extraQuery: null,\n            inputCss: this.options.inputCss,\n        };\n    },\n    computed: {\n        classIcon: function () {\n            return {\n                'search icon': (this.query === null || this.query === ''),\n                'remove icon': this.query !== null,\n            };\n        },\n    },\n    methods: {\n        onKeyup: function () {\n            atk.debounce((e) => {\n                if (this.query !== this.temp) {\n                    if (this.query === '') {\n                        this.query = null;\n                    }\n                    this.sendQuery();\n                    this.temp = this.query;\n                }\n            }, this.options.inputTimeOut).call(this);\n        },\n        onEscape: function () {\n            if (this.query !== null) {\n                this.query = null;\n                this.temp = null;\n                this.sendQuery();\n            }\n        },\n        onEnter: function () {\n            if (this.query !== null) {\n                this.query = null;\n                this.temp = null;\n                this.sendQuery();\n            }\n        },\n        onClear: function () {\n            if (this.query) {\n                this.query = null;\n                this.temp = null;\n                this.sendQuery();\n            }\n        },\n        sendQuery: function () {\n            const that = this;\n            const options = $.extend({}, this.extraQuery, { __atk_reload: this.reload, [this.queryArg]: this.query });\n            const $reload = $('#' + this.reload);\n            this.isActive = true;\n            $reload.api({\n                on: 'now',\n                url: this.url,\n                data: options,\n                method: 'GET',\n                stateContext: (this.context) ? $(this.context) : $(this.$el),\n                onComplete: function (e, r) {\n                    that.isActive = false;\n                },\n            });\n        },\n    },\n};\n"],"names":["name","template","props","context","String","url","q","reload","queryArg","options","type","Object","default","inputTimeOut","inputCss","data","query","this","temp","isActive","extraQuery","computed","classIcon","methods","onKeyup","atk","debounce","e","sendQuery","call","onEscape","onEnter","onClear","that","$","__atk_reload","$reload","api","on","method","stateContext","$el","onComplete","r"],"sourceRoot":""}