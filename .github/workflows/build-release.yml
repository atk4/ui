name: Build Release

on:
  push:
    branches:
      - '**\.build/*'
      - 'release/*'
      - '!**\.gen'

jobs:
  autocommit:
    name: Build Release
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/mvorisek/image-php:latest-node
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}

      - name: Target variables - discover
        id: target
        run: |
          echo "::set-output name=version_name::$(echo '${{ github.ref }}' | sed -E 's~.+/~~')"

      - name: Target variables - show
        run: |
          echo "Target Version: ${{ steps.target.outputs.version_name }}"
          if ! echo "${{ steps.target.outputs.version_name }}" | grep '^[0-9]\+\.[0-9]\+\.[0-9]\+'; then echo "ERROR: Version must have [0-9].[0-9].[0-9] format!"; exit 1 ; fi

      - name: Install PHP dependencies
        run: composer update --ansi --prefer-dist --no-interaction --no-progress --optimize-autoloader

      - name: Composer unset version
        run: composer config version --unset

      - name: Update composer.json
        run: >-
          php -r '
          $f = __DIR__ . "/composer.json";
          $data = json_decode(file_get_contents($f), true);
          foreach ($data as $k => $v) {
              if (preg_match("~^(.+)-release$~", $k, $matches)) {
                  $data[$matches[1]] = $data[$k]; unset($data[$k]);
              }
          }
          $str = json_encode($data, JSON_PRETTY_PRINT | JSON_UNESCAPED_SLASHES | JSON_UNESCAPED_UNICODE) . "\n";
          echo $str;
          file_put_contents($f, $str);
          '

      - name: Composer validate config
        run: composer validate --strict --no-check-lock && composer normalize --dry-run --no-check-lock

      - name: Update version in src/App.php
        run: |
          sed -i "s|public \$version.*|public \$version = '${{ steps.target.outputs.version_name }}';|" src/App.php

      - name: Install JS dependencies
        run: |
          npm install --loglevel=error -g pug-cli less less-plugin-clean-css uglify-js
          (cd js && npm ci --loglevel=error)

      - name: Compile JS and CSS files for CDN
        run: |
          (cd js && npm run build)
          sed -i "s~'https://raw.githack.com/atk4/ui/develop/public.*~'https://raw.githack.com/atk4/ui/${{ steps.target.outputs.version_name }}/public',~" src/App.php

          lessc public/agileui.less public/agileui.css --clean-css="--s1 --advanced" --source-map
          echo '!/agileui.css.map' >> public/.gitignore

      - name: Commit
        run: |
          git config --global user.name "$(git show -s --format='%an')"
          git config --global user.email "$(git show -s --format='%ae')"
          git add -A && git diff --staged && git commit -m "Build Release \"${{ steps.target.outputs.version_name }}\""

      - name: Push
        uses: ad-m/github-push-action@master
        with:
          branch: ${{ github.ref }}.gen
          force: true
          github_token: ${{ secrets.GITHUB_TOKEN }}
